function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}Auth.prototype.run=function(){var t=this;t.ListenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.ListenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),i=$(".close-btn"),r=$(".scroll-wrapper");n.click(function(){t.showEvent(),r.css({left:0})}),e.click(function(){t.showEvent(),r.css({left:-400})}),i.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiQXV0aCIsInRoaXMiLCJtYXNrV3JhcHBlciIsIiQiLCJzY3JvbGxXcmFwcGVyIiwicHJvdG90eXBlIiwicnVuIiwic2VsZiIsIkxpc3RlblNob3dIaWRlRXZlbnQiLCJsaXN0ZW5Td2l0Y2hFdmVudCIsImxpc3RlblNpZ25pbkV2ZW50Iiwic2hvd0V2ZW50Iiwic2hvdyIsImhpZGVFdmVudCIsImhpZGUiLCJzaWduaW5idG4iLCJzaWdudXBidG4iLCJjbG9zZWJ0biIsInNjcm9sbHdyYXBwZXIiLCJjbGljayIsImNzcyIsImxlZnQiLCJjdXJyZW50TGVmdCIsInBhcnNlSW50IiwiYW5pbWF0ZSJdLCJtYXBwaW5ncyI6IkFBRUEsU0FBU0EsT0FDTUMsS0FDTkMsWUFBY0MsRUFBRSxpQkFEVkYsS0FFTkcsY0FBZ0JELEVBQUUsbUJBRzNCSCxLQUFLSyxVQUFVQyxJQUFNLFdBQ2pCLElBQUlDLEVBQU9OLEtBQ1hNLEVBQUtDLHNCQUNMRCxFQUFLRSxvQkFDTEYsRUFBS0cscUJBR1RWLEtBQUtLLFVBQVVNLFVBQVksV0FDWlYsS0FDTkMsWUFBWVUsUUFHckJaLEtBQUtLLFVBQVVRLFVBQVksV0FDWlosS0FDTkMsWUFBWVksUUFHckJkLEtBQUtLLFVBQVVHLG9CQUFzQixXQUNqQyxJQUFJRCxFQUFPTixLQUNQYyxFQUFZWixFQUFFLGVBQ2RhLEVBQVliLEVBQUUsZUFDZGMsRUFBV2QsRUFBRSxjQUNiZSxFQUFnQmYsRUFBRSxtQkFDdEJZLEVBQVVJLE1BQU0sV0FDWlosRUFBS0ksWUFDTE8sRUFBY0UsSUFBSSxDQUFDQyxLQUFPLE1BRTlCTCxFQUFVRyxNQUFNLFdBQ2JaLEVBQUtJLFlBQ0xPLEVBQWNFLElBQUksQ0FBQ0MsTUFBUSxRQUU5QkosRUFBU0UsTUFBTSxXQUNaWixFQUFLTSxlQUlaYixLQUFLSyxVQUFVSSxrQkFBb0IsV0FDL0IsSUFBSUYsRUFBT04sS0FDSUUsRUFBRSxXQUNSZ0IsTUFBTSxXQUNYLElBQUlHLEVBQWNmLEVBQUtILGNBQWNnQixJQUFJLFNBQ3pDRSxFQUFjQyxTQUFTRCxJQUNOLEVBQ2JmLEVBQUtILGNBQWNvQixRQUFRLENBQUNILEtBQU8sTUFFbkNkLEVBQUtILGNBQWNvQixRQUFRLENBQUNILEtBQU8sY0FzRC9DbEIsRUFBRSxZQUNZLElBQUlILE1BQ1ZNIiwiZmlsZSI6ImF1dGgubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5mdW5jdGlvbiBBdXRoKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgc2VsZi5tYXNrV3JhcHBlciA9ICQoJy5tYXNrLXdyYXBwZXInKTtcclxuICAgIHNlbGYuc2Nyb2xsV3JhcHBlciA9ICQoXCIuc2Nyb2xsLXdyYXBwZXJcIik7XHJcbn1cclxuXHJcbkF1dGgucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLkxpc3RlblNob3dIaWRlRXZlbnQoKTtcclxuICAgIHNlbGYubGlzdGVuU3dpdGNoRXZlbnQoKTtcclxuICAgIHNlbGYubGlzdGVuU2lnbmluRXZlbnQoKTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLnNob3dFdmVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLm1hc2tXcmFwcGVyLnNob3coKTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLmhpZGVFdmVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLm1hc2tXcmFwcGVyLmhpZGUoKTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLkxpc3RlblNob3dIaWRlRXZlbnQgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIHNpZ25pbmJ0biA9ICQoJy5zaWduaW4tYnRuJyk7XHJcbiAgICB2YXIgc2lnbnVwYnRuID0gJCgnLnNpZ251cC1idG4nKTtcclxuICAgIHZhciBjbG9zZWJ0biA9ICQoJy5jbG9zZS1idG4nKTtcclxuICAgIHZhciBzY3JvbGx3cmFwcGVyID0gJCgnLnNjcm9sbC13cmFwcGVyJyk7XHJcbiAgICBzaWduaW5idG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc2hvd0V2ZW50KCk7XHJcbiAgICAgICAgc2Nyb2xsd3JhcHBlci5jc3MoeydsZWZ0JzowfSk7XHJcbiAgICB9KTtcclxuICAgIHNpZ251cGJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICBzZWxmLnNob3dFdmVudCgpO1xyXG4gICAgICAgc2Nyb2xsd3JhcHBlci5jc3MoeydsZWZ0JzotNDAwfSk7XHJcbiAgICB9KTtcclxuICAgIGNsb3NlYnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgIHNlbGYuaGlkZUV2ZW50KCk7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLmxpc3RlblN3aXRjaEV2ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHZhciBzd2l0Y2hlciA9ICQoXCIuc3dpdGNoXCIpO1xyXG4gICAgc3dpdGNoZXIuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjdXJyZW50TGVmdCA9IHNlbGYuc2Nyb2xsV3JhcHBlci5jc3MoXCJsZWZ0XCIpXHJcbiAgICAgICAgY3VycmVudExlZnQgPSBwYXJzZUludChjdXJyZW50TGVmdClcclxuICAgICAgICBpZihjdXJyZW50TGVmdCA8IDApe1xyXG4gICAgICAgICAgICBzZWxmLnNjcm9sbFdyYXBwZXIuYW5pbWF0ZSh7XCJsZWZ0XCI6XCIwXCJ9KTtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgIHNlbGYuc2Nyb2xsV3JhcHBlci5hbmltYXRlKHtcImxlZnRcIjpcIi00MDBweFwifSlcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufTtcclxuXHJcbi8vIEF1dGgucHJvdG90eXBlLmxpc3RlblNpZ25pbkV2ZW50ID0gZnVuY3Rpb24oKXtcclxuLy8gICAgIHZhciBzZWxmID0gdGhpcztcclxuLy8gICAgIHZhciBzaWduaW5Hcm91cCA9ICQoJy5zaWduaW4tZ3JvdXAnKTtcclxuLy8gICAgIHZhciB0ZWxlcGhvbmVJbnB1dCA9IHNpZ25pbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSd0ZWxlcGhvbmUnXVwiKTtcclxuLy8gICAgIHZhciBwYXNzd29yZElucHV0ID0gc2lnbmluR3JvdXAuZmluZChcImlucHV0W25hbWU9J3Bhc3N3b3JkJ11cIik7XHJcbi8vICAgICB2YXIgcmVtZW1iZXJJbnB1dCA9IHNpZ25pbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdyZW1lbWJlciddXCIpO1xyXG4vL1xyXG4vLyAgICAgdmFyIHN1Ym1pdEJ0biA9IHNpZ25pbkdyb3VwLmZpbmQoJy5zdWJtaXQtYnRuJyk7XHJcbi8vICAgICBzdWJtaXRCdG4uY2xpY2soZnVuY3Rpb24gKGV2ZW50KSB7XHJcbi8vICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuLy8gICAgICAgICB2YXIgdGVsZXBob25lID0gdGVsZXBob25lSW5wdXQudmFsKCk7XHJcbi8vICAgICAgICAgdmFyIHBhc3N3b3JkID0gcGFzc3dvcmRJbnB1dC52YWwoKTtcclxuLy8gICAgICAgICB2YXIgcmVtZW1iZXIgPSByZW1lbWJlcklucHV0LnByb3AoJ2NoZWNrZWQnKTtcclxuLy9cclxuLy8gICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4vLyAgICAgICAgICAgICAndXJsJzonL2FjY291bnQvbG9naW4vJyxcclxuLy8gICAgICAgICAgICAgJ2RhdGEnOntcclxuLy8gICAgICAgICAgICAgICAgICd0ZWxlcGhvbmUnOnRlbGVwaG9uZSxcclxuLy8gICAgICAgICAgICAgICAgICdwYXNzd29yZCc6cGFzc3dvcmQsXHJcbi8vICAgICAgICAgICAgICAgICAncmVtZW1iZXInOnJlbWVtYmVyPzE6MFxyXG4vLyAgICAgICAgICAgICB9LFxyXG4vLyAgICAgICAgICAgICAnc3VjY2Vzcyc6ZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4vLyAgICAgICAgICAgICAgICAgaWYocmVzdWx0Wydjb2RlJ10gPT0gMjAwKXtcclxuLy8gICAgICAgICAgICAgICAgICAgICBzZWxmLmhpZGVFdmVudCgpO1xyXG4vLyAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuLy8gICAgICAgICAgICAgICAgIH1lbHNle1xyXG4vLyAgICAgICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlY29kZSA9IHJlc3VsdFsnbWVzc2FnZSddO1xyXG4vLyAgICAgICAgICAgICAgICAgICAgIGlmKHR5cGVvZiBtZXNzYWdlY29kZSA9PSAnc3RyaW5nJyB8fCBtZXNzYWdlY29kZS5jb25zdHJ1Y3RvciA9PSBTdHJpbmcpe1xyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubWVzc2FnZUJveC5zaG93KG1lc3NhZ2Vjb2RlKTtcclxuLy8gICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gbWVzc2FnZWNvZGUpe1xyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2VzID0gbWVzc2FnZWNvZGVba2V5XTtcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlID0gbWVzc2FnZXNbMF07XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubWVzc2FnZUJveC5zaG93KG1lc3NhZ2UpO1xyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgICAgICAgICAgfVxyXG4vLyAgICAgICAgICAgICAgICAgfVxyXG4vL1xyXG4vLyAgICAgICAgICAgICB9LFxyXG4vLyAgICAgICAgICAgICAnZmFpbCc6ZnVuY3Rpb24gKGVycm9yKSB7XHJcbi8vICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbi8vXHJcbi8vICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICB9KTtcclxuLy8gICAgIH0pO1xyXG4vLyB9O1xyXG5cclxuXHJcblxyXG4kKGZ1bmN0aW9uICgpIHtcclxuICAgdmFyIGF1dGggPSBuZXcgQXV0aCgpO1xyXG4gICBhdXRoLnJ1bigpO1xyXG59KTsiXX0=
