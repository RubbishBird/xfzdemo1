function UploadFile(){}UploadFile.prototype.run=function(){this.listenQiniuUploadFileEvent()},UploadFile.prototype.listenUploadFileEvent=function(){var n=$("#thunbnail-btn");n.change(function(){var e=n[0].files[0],o=new FormData;o.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:o,processData:!1,contentType:!1,success:function(e){if(200===e.code){var o=e.data.url;$("#thunbnail-form").val(o)}}})})},UploadFile.prototype.listenQiniuUploadFileEvent=function(){var l=this;$("#thunbnail-btn").change(function(){var t=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var o=e.data.token,n=t.name,a={fname:n,params:{},mimeType:["image/png","image/jpeg","image/gif","image/bmp","image/jpg"]},i={useCdnDomain:!0,region:qiniu.region.z2,retryCount:6};qiniu.upload(t,n,o,a,i).subscribe({next:l.handleFileUploadProgress,error:l.handleFileUploadError,complete:l.handleFileUploadComplete})}}})})},UploadFile.prototype.handleFileUploadProgress=function(e){var o=e.total.percent.toFixed(0)+"%";$("#process-group").show();var n=$(".progress-bar");n.css({width:o}),n.text(o)},UploadFile.prototype.handleFileUploadError=function(e){console.log(e.message)},UploadFile.prototype.handleFileUploadComplete=function(e){$("#process-group").hide();var o="http://pw9qu83i4.bkt.clouddn.com/"+e.key;$("#thunbnail-form").val(o)},$(function(){(new UploadFile).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndyaXRlX25ld3MuanMiXSwibmFtZXMiOlsiVXBsb2FkRmlsZSIsInByb3RvdHlwZSIsInJ1biIsInRoaXMiLCJsaXN0ZW5RaW5pdVVwbG9hZEZpbGVFdmVudCIsImxpc3RlblVwbG9hZEZpbGVFdmVudCIsInVwbG9hZEJ0biIsIiQiLCJjaGFuZ2UiLCJmaWxlIiwiZmlsZXMiLCJmb3JtRGF0YSIsIkZvcm1EYXRhIiwiYXBwZW5kIiwieGZ6YWpheCIsInBvc3QiLCJ1cmwiLCJkYXRhIiwicHJvY2Vzc0RhdGEiLCJjb250ZW50VHlwZSIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJ2YWwiLCJzZWxmIiwiZ2V0IiwidG9rZW4iLCJrZXkiLCJuYW1lIiwicHV0RXh0cmEiLCJmbmFtZSIsInBhcmFtcyIsIm1pbWVUeXBlIiwiY29uZmlnIiwidXNlQ2RuRG9tYWluIiwicmVnaW9uIiwicWluaXUiLCJ6MiIsInJldHJ5Q291bnQiLCJ1cGxvYWQiLCJzdWJzY3JpYmUiLCJuZXh0IiwiaGFuZGxlRmlsZVVwbG9hZFByb2dyZXNzIiwiZXJyb3IiLCJoYW5kbGVGaWxlVXBsb2FkRXJyb3IiLCJjb21wbGV0ZSIsImhhbmRsZUZpbGVVcGxvYWRDb21wbGV0ZSIsInJlc3BvbnNlIiwicGVyY2VudFRleHQiLCJ0b3RhbCIsInBlcmNlbnQiLCJ0b0ZpeGVkIiwic2hvdyIsInByb2dyZXNzYmFyIiwiY3NzIiwid2lkdGgiLCJ0ZXh0IiwiY29uc29sZSIsImxvZyIsIm1lc3NhZ2UiLCJoaWRlIl0sIm1hcHBpbmdzIjoiQUFFQSxTQUFTQSxjQUtUQSxXQUFXQyxVQUFVQyxJQUFNLFdBQ1pDLEtBRU5DLDhCQUtUSixXQUFXQyxVQUFVSSxzQkFBd0IsV0FDekMsSUFBSUMsRUFBWUMsRUFBRSxrQkFDbEJELEVBQVVFLE9BQU8sV0FDYixJQUFJQyxFQUFPSCxFQUFVLEdBQUdJLE1BQU0sR0FDMUJDLEVBQVcsSUFBSUMsU0FDbkJELEVBQVNFLE9BQU8sT0FBT0osR0FDdkJLLFFBQVFDLEtBQUssQ0FDVEMsSUFBTSxvQkFDTkMsS0FBT04sRUFDUE8sYUFBYyxFQUNkQyxhQUFjLEVBQ2RDLFFBQVUsU0FBVUMsR0FDaEIsR0FBb0IsTUFBakJBLEVBQWEsS0FBUSxDQUNwQixJQUFJTCxFQUFNSyxFQUFhLEtBQU8sSUFDVGQsRUFBRSxtQkFDUmUsSUFBSU4sVUFRdkNoQixXQUFXQyxVQUFVRywyQkFBNkIsV0FDOUMsSUFBSW1CLEVBQU9wQixLQUNLSSxFQUFFLGtCQUNSQyxPQUFPLFdBQ2IsSUFBSUMsRUFBT04sS0FBS08sTUFBTSxHQUN0QkksUUFBUVUsSUFBSSxDQUNSUixJQUFNLGdCQUNOSSxRQUFVLFNBQVVDLEdBQ2hCLEdBQXVCLE1BQW5CQSxFQUFhLEtBQVcsQ0FDeEIsSUFBSUksRUFBUUosRUFBYSxLQUFTLE1BRTlCSyxFQUFNakIsRUFBS2tCLEtBQ1hDLEVBQVcsQ0FDWEMsTUFBTUgsRUFDTkksT0FBTyxHQUNQQyxTQUFTLENBQUMsWUFBYSxhQUFjLFlBQVksWUFBWSxjQUU3REMsRUFBUyxDQUNUQyxjQUFjLEVBQ2RDLE9BQVFDLE1BQU1ELE9BQU9FLEdBQ3JCQyxXQUFXLEdBRUVGLE1BQU1HLE9BQU83QixFQUFNaUIsRUFBS0QsRUFBT0csRUFBVUksR0FDL0NPLFVBQVUsQ0FDakJDLEtBQU9qQixFQUFLa0IseUJBQ1pDLE1BQVFuQixFQUFLb0Isc0JBQ2JDLFNBQVdyQixFQUFLc0Isa0NBYXhDN0MsV0FBV0MsVUFBVXdDLHlCQUEyQixTQUFTSyxHQUNyRCxJQUVJQyxFQUZRRCxFQUFTRSxNQUNEQyxRQUNNQyxRQUFRLEdBQUssSUFDbkIzQyxFQUFFLGtCQUNSNEMsT0FDZCxJQUFJQyxFQUFjN0MsRUFBRSxpQkFDcEI2QyxFQUFZQyxJQUFJLENBQUNDLE1BQVFQLElBQ3pCSyxFQUFZRyxLQUFLUixJQUdyQi9DLFdBQVdDLFVBQVUwQyxzQkFBd0IsU0FBU0QsR0FDbERjLFFBQVFDLElBQUlmLEVBQU1nQixVQUd0QjFELFdBQVdDLFVBQVU0Qyx5QkFBMkIsU0FBU0MsR0FDakN2QyxFQUFFLGtCQUNSb0QsT0FDZCxJQUVJM0MsRUFGUyxvQ0FDRThCLEVBQVNwQixJQUVIbkIsRUFBRSxtQkFDUmUsSUFBSU4sSUFJdkJULEVBQUUsWUFDbUIsSUFBSVAsWUFDVkUiLCJmaWxlIjoid3JpdGVfbmV3cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmZ1bmN0aW9uIFVwbG9hZEZpbGUoKXtcclxuXHJcbn07XHJcblxyXG5cclxuVXBsb2FkRmlsZS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgLy8gc2VsZi5saXN0ZW5VcGxvYWRGaWxlRXZlbnQoKTtcclxuICAgIHNlbGYubGlzdGVuUWluaXVVcGxvYWRGaWxlRXZlbnQoKTtcclxuXHJcbn07XHJcblxyXG4vLyDkuIrkvKDoh7PmnKzlnLDmnI3liqHlmahcclxuVXBsb2FkRmlsZS5wcm90b3R5cGUubGlzdGVuVXBsb2FkRmlsZUV2ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciB1cGxvYWRCdG4gPSAkKCcjdGh1bmJuYWlsLWJ0bicpO1xyXG4gICAgdXBsb2FkQnRuLmNoYW5nZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGZpbGUgPSB1cGxvYWRCdG5bMF0uZmlsZXNbMF07XHJcbiAgICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XHJcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJyxmaWxlKTtcclxuICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzonL2Ntcy91cGxvYWRfZmlsZS8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6Zm9ybURhdGEsXHJcbiAgICAgICAgICAgICdwcm9jZXNzRGF0YSc6ZmFsc2UsXHJcbiAgICAgICAgICAgICdjb250ZW50VHlwZSc6ZmFsc2UsXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZihyZXN1bHRbJ2NvZGUnXT09PTIwMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHVybCA9IHJlc3VsdFsnZGF0YSddWyd1cmwnXTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdGh1bWJuYWlsSW5wdXQgPSAkKCcjdGh1bmJuYWlsLWZvcm0nKTtcclxuICAgICAgICAgICAgICAgICAgICB0aHVtYm5haWxJbnB1dC52YWwodXJsKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9KTtcclxufTtcclxuXHJcbi8vIOS4iuS8oOiHs+S4g+eJm+acjeWKoeWZqFxyXG5VcGxvYWRGaWxlLnByb3RvdHlwZS5saXN0ZW5RaW5pdVVwbG9hZEZpbGVFdmVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgdXBsb2FkQnRuID0gJCgnI3RodW5ibmFpbC1idG4nKTtcclxuICAgIHVwbG9hZEJ0bi5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBmaWxlID0gdGhpcy5maWxlc1swXTtcclxuICAgICAgICB4ZnphamF4LmdldCh7XHJcbiAgICAgICAgICAgICd1cmwnOicvY21zL3FudG9rZW4vJyxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOmZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXSA9PT0gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRva2VuID0gcmVzdWx0WydkYXRhJ11bJ3Rva2VuJ107XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gdmFyIGtleSA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCkgKyAnLicgKyBmaWxlLm5hbWUuc3BsaXQoJy4nKVsxXTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIga2V5ID0gZmlsZS5uYW1lXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHB1dEV4dHJhID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmbmFtZTprZXksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczp7fSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWltZVR5cGU6W1wiaW1hZ2UvcG5nXCIsIFwiaW1hZ2UvanBlZ1wiLCBcImltYWdlL2dpZlwiLFwiaW1hZ2UvYm1wXCIsXCJpbWFnZS9qcGdcIl0sXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgY29uZmlnID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1c2VDZG5Eb21haW46IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2lvbjogcWluaXUucmVnaW9uLnoyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXRyeUNvdW50OjYsXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgb2JzZXJ2YWJsZSA9IHFpbml1LnVwbG9hZChmaWxlLCBrZXksIHRva2VuLCBwdXRFeHRyYSwgY29uZmlnKTtcclxuICAgICAgICAgICAgICAgICAgICBvYnNlcnZhYmxlLnN1YnNjcmliZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICduZXh0JzpzZWxmLmhhbmRsZUZpbGVVcGxvYWRQcm9ncmVzcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ2Vycm9yJzpzZWxmLmhhbmRsZUZpbGVVcGxvYWRFcnJvcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbXBsZXRlJzpzZWxmLmhhbmRsZUZpbGVVcGxvYWRDb21wbGV0ZSxcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gdmFyIHVybCA9IHJlc3VsdFsnZGF0YSddWyd1cmwnXTtcclxuICAgICAgICAgICAgICAgICAgICAvLyB2YXIgdGh1bWJuYWlsSW5wdXQgPSAkKCcjdGh1bmJuYWlsLWZvcm0nKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyB0aHVtYm5haWxJbnB1dC52YWwodXJsKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9KTtcclxuXHJcbn07XHJcblxyXG5VcGxvYWRGaWxlLnByb3RvdHlwZS5oYW5kbGVGaWxlVXBsb2FkUHJvZ3Jlc3MgPSBmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICB2YXIgdG90YWwgPSByZXNwb25zZS50b3RhbDtcclxuICAgIHZhciBwZXJjZW50ID0gdG90YWwucGVyY2VudDtcclxuICAgIHZhciBwZXJjZW50VGV4dCA9IHBlcmNlbnQudG9GaXhlZCgwKSArICclJztcclxuICAgIHZhciBwcm9ncmVzc2dyb3VwID0gJCgnI3Byb2Nlc3MtZ3JvdXAnKTtcclxuICAgIHByb2dyZXNzZ3JvdXAuc2hvdygpO1xyXG4gICAgdmFyIHByb2dyZXNzYmFyID0gJCgnLnByb2dyZXNzLWJhcicpO1xyXG4gICAgcHJvZ3Jlc3NiYXIuY3NzKHsnd2lkdGgnOnBlcmNlbnRUZXh0fSlcclxuICAgIHByb2dyZXNzYmFyLnRleHQocGVyY2VudFRleHQpO1xyXG59O1xyXG5cclxuVXBsb2FkRmlsZS5wcm90b3R5cGUuaGFuZGxlRmlsZVVwbG9hZEVycm9yID0gZnVuY3Rpb24oZXJyb3Ipe1xyXG4gICAgY29uc29sZS5sb2coZXJyb3IubWVzc2FnZSk7XHJcbn07XHJcblxyXG5VcGxvYWRGaWxlLnByb3RvdHlwZS5oYW5kbGVGaWxlVXBsb2FkQ29tcGxldGUgPSBmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICB2YXIgcHJvZ3Jlc3Nncm91cCA9ICQoJyNwcm9jZXNzLWdyb3VwJyk7XHJcbiAgICBwcm9ncmVzc2dyb3VwLmhpZGUoKTtcclxuICAgIHZhciBkb21haW4gPSAnaHR0cDovL3B3OXF1ODNpNC5ia3QuY2xvdWRkbi5jb20vJztcclxuICAgIHZhciBmaWxlbmFtZSA9IHJlc3BvbnNlLmtleTtcclxuICAgIHZhciB1cmwgPSBkb21haW4gKyBmaWxlbmFtZTtcclxuICAgIHZhciB0aHVtYm5haWxJbnB1dCA9ICQoJyN0aHVuYm5haWwtZm9ybScpO1xyXG4gICAgdGh1bWJuYWlsSW5wdXQudmFsKHVybCk7XHJcbn07XHJcblxyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgdXBsb2FkZmlsZSA9IG5ldyBVcGxvYWRGaWxlKCk7XHJcbiAgICB1cGxvYWRmaWxlLnJ1bigpO1xyXG5cclxufSk7Il19
