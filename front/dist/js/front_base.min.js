function FrontBase(){}function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}FrontBase.prototype.run=function(){this.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.run=function(){var t=this;t.ListenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.ListenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),o=$(".close-btn"),i=$(".scroll-wrapper");n.click(function(){t.showEvent(),i.css({left:0})}),e.click(function(){t.showEvent(),i.css({left:-400})}),o.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img_captcha");t.click(function(){t.attr("src","account/img_captcha?random="+Math.random())})},Auth.prototype.listenSmsCaptchaEvent=function(){var o=$(".sms-captcha-btn"),n=$(".signup-group input[name = 'sms-captcha']");o.click(function(){var t=n.val();t||window.messageBox.showInfo("请输入手机号码！"),xfzajax.get({url:"/account/sms_captcha",data:{telephone:t},success:function(t){if(200==t.code){messageBox.showSuccess("短信验证码发送成功！"),o.addClass("disabled");var n=60,e=setInterval(function(){o.text(n+"s"),(n-=1)<=0&&(clearInterval(e),o.removeClass("disabled"),o.text("发送验证码"))},1e3)}},fail:function(t){console.log(t)}})})},Auth.prototype.listenSigninEvent=function(){var i=this,t=$(".signin-group"),s=t.find("input[name='telephone']"),a=t.find("input[name='password']"),c=t.find("input[name='remember']");t.find(".submit-btn").click(function(t){t.preventDefault();var n=s.val(),e=a.val(),o=c.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:n,password:e,remember:o?1:0},success:function(t){if(200==t.code)i.hideEvent(),window.location.reload();else{var n=t.message;if("string"==typeof n||n.constructor==String)window.messageBox.show(n);else for(var e in n){var o=n[e][0];window.messageBox.show(o)}}},fail:function(t){console.log(t)}})})},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
